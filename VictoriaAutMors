-- Services
local Players = game:GetService("Players")
local Teams = game:GetService("Teams")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer

-- Settings
local DEFAULT_HEAD_SIZE = Vector3.new(2, 1, 1)
local DEFAULT_KEY = Enum.KeyCode.LeftAlt

-- State
local keybind = DEFAULT_KEY
local headModEnabled = false
local teamLabelsEnabled = false
local ignoredTeams = {}

local getHeadSize = function() return 1 end
local getTransparency = function() return 0 end

-- Utilities
local function findHead(character)
	for _, part in ipairs(character:GetChildren()) do
		if part:IsA("BasePart") and part.Name:lower() == "head" then
			return part
		end
	end
end

local function isIgnored(player)
	return ignoredTeams[player.Team and player.Team.Name or ""] or false
end

local function applyHeadMod(player)
	if player == LocalPlayer then return end
	local char = player.Character
	local humanoid = char and char:FindFirstChildOfClass("Humanoid")
	local head = char and findHead(char)
	if not (humanoid and head) then return end

	if humanoid.Health > 0 and headModEnabled and not isIgnored(player) then
		head.Size = DEFAULT_HEAD_SIZE * getHeadSize()
		head.Transparency = getTransparency()
		head.CanCollide = false
		head.Massless = true
	else
		head.Size = DEFAULT_HEAD_SIZE
		head.Transparency = 0
		head.CanCollide = true
		head.Massless = false
	end
end

local function applyAllHeadMods()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			applyHeadMod(player)
		end
	end
end

-- Team Labels
local function createTeamLabel(player)
	local char = player.Character
	local head = char and findHead(char)
	if not head or not player.Team then return end

	local existing = char:FindFirstChild("TeamLabel")
	if existing then existing:Destroy() end

	local billboard = Instance.new("BillboardGui")
	billboard.Name = "TeamLabel"
	billboard.Adornee = head
	billboard.Size = UDim2.new(0, 70, 0, 30)
	billboard.StudsOffset = Vector3.new(0, 1.5, 0)
	billboard.AlwaysOnTop = true
	billboard.Parent = char

	local nameLabel = Instance.new("TextLabel")
	nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
	nameLabel.Position = UDim2.new(0, 0, 0, 0)
	nameLabel.BackgroundTransparency = 1
	nameLabel.Text = player.Name
	nameLabel.TextColor3 = player.Team.TeamColor.Color
	nameLabel.TextStrokeTransparency = 0.5
	nameLabel.TextScaled = false
	nameLabel.TextSize = 12
	nameLabel.Parent = billboard

	local healthLabel = Instance.new("TextLabel")
	healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
	healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
	healthLabel.BackgroundTransparency = 1
	healthLabel.Text = ""
	healthLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
	healthLabel.TextStrokeTransparency = 0.5
	healthLabel.TextScaled = false
	healthLabel.TextSize = 10
	healthLabel.Parent = billboard

	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if humanoid then
		RunService.Heartbeat:Connect(function()
			if humanoid.Parent and billboard.Parent then
				healthLabel.Text = string.format("Health: %d", humanoid.Health)
			else
				billboard:Destroy()
			end
		end)
	end
end

local function updateAllTeamLabels()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local char = player.Character
			if char then
				local existing = char:FindFirstChild("TeamLabel")
				if existing then existing:Destroy() end
				if teamLabelsEnabled and player.Team then
					createTeamLabel(player)
				end
			end
		end
	end
end

-- UI
local gui = Instance.new("ScreenGui")
gui.Name = "ClientESP_UI"
gui.ResetOnSpawn = false
gui.DisplayOrder = 1000
gui.Parent = game:GetService("CoreGui")

local openButton = Instance.new("TextButton")
openButton.Size = UDim2.new(0, 100, 0, 40)
openButton.Position = UDim2.new(0, 10, 0, 10)
openButton.Text = "Open Menu"
openButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
openButton.TextColor3 = Color3.new(1, 1, 1)
openButton.Parent = gui

local menu = Instance.new("Frame")
menu.Size = UDim2.new(0, 250, 0, 400)
menu.Position = UDim2.new(0, 10, 0, 60)
menu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
menu.Visible = false
menu.Parent = gui

UserInputService.InputBegan:Connect(function(input, gpe)
	if not gpe and input.KeyCode == keybind then
		menu.Visible = not menu.Visible
	end
end)

openButton.MouseButton1Click:Connect(function()
	menu.Visible = not menu.Visible
end)

local function createLabel(text, y)
	local lbl = Instance.new("TextLabel")
	lbl.Position = UDim2.new(0, 10, 0, y)
	lbl.Size = UDim2.new(0, 200, 0, 20)
	lbl.BackgroundTransparency = 1
	lbl.TextColor3 = Color3.new(1, 1, 1)
	lbl.Text = text
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.Parent = menu
end

local function createCheckbox(y, toggleCallback)
	local box = Instance.new("TextButton")
	box.Size = UDim2.new(0, 20, 0, 20)
	box.Position = UDim2.new(0, 90, 0, y)
	box.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	box.Text = ""
	box.Parent = menu
	box.MouseButton1Click:Connect(function()
		local enabled = toggleCallback()
		box.BackgroundColor3 = enabled and Color3.new(0, 1, 0) or Color3.fromRGB(80, 80, 80)
	end)
end

local function createSlider(y, min, max, default)
	local frame = Instance.new("Frame")
	frame.Position = UDim2.new(0, 10, 0, y)
	frame.Size = UDim2.new(0, 200, 0, 20)
	frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	frame.Parent = menu

	local fill = Instance.new("Frame")
	fill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(120, 120, 255)
	fill.Parent = frame

	local value = default
	local dragging = false

	local function update(x)
		local relX = math.clamp((x - frame.AbsolutePosition.X) / frame.AbsoluteSize.X, 0, 1)
		fill.Size = UDim2.new(relX, 0, 1, 0)
		value = min + relX * (max - min)
		applyAllHeadMods()
	end

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			update(input.Position.X)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			update(input.Position.X)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	return function() return value end
end

createLabel("Head Mod:", 10)
createCheckbox(10, function()
	headModEnabled = not headModEnabled
	applyAllHeadMods()
	return headModEnabled
end)

createLabel("Team Labels:", 40)
createCheckbox(40, function()
	teamLabelsEnabled = not teamLabelsEnabled
	updateAllTeamLabels()
	return teamLabelsEnabled
end)

createLabel("Head Size:", 100)
getHeadSize = createSlider(120, 1, 100, DEFAULT_HEAD_SIZE.X)

createLabel("Transparency:", 150)
getTransparency = createSlider(170, 0, 1, 0)

createLabel("Ignore Team (Head):", 365)
local dropdown = Instance.new("TextButton")
dropdown.Size = UDim2.new(0, 200, 0, 25)
dropdown.Position = UDim2.new(0, 10, 0, 385)
dropdown.Text = "Select team to ignore..."
dropdown.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
dropdown.TextColor3 = Color3.new(1, 1, 1)
dropdown.Parent = menu

local teamDropdownOpen = false
dropdown.MouseButton1Click:Connect(function()
	teamDropdownOpen = not teamDropdownOpen
	for _, obj in ipairs(menu:GetChildren()) do
		if obj.Name == "TeamOption" then obj:Destroy() end
	end
	if not teamDropdownOpen then return end

	local y = 415
	for _, team in ipairs(Teams:GetTeams()) do
		local btn = Instance.new("TextButton")
		btn.Name = "TeamOption"
		btn.Position = UDim2.new(0, 10, 0, y)
		btn.Size = UDim2.new(0, 200, 0, 20)
		btn.Text = (ignoredTeams[team.Name] and "[✔] " or "[  ] ") .. team.Name
		btn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		btn.TextColor3 = Color3.new(1, 1, 1)
		btn.Parent = menu
		btn.MouseButton1Click:Connect(function()
			ignoredTeams[team.Name] = not ignoredTeams[team.Name]
			btn.Text = (ignoredTeams[team.Name] and "[✔] " or "[  ] ") .. team.Name
			applyAllHeadMods()
		end)
		y += 25
	end
end)

-- Update loop
RunService.Heartbeat:Connect(function()
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			applyHeadMod(player)
		end
	end
end)

-- Player hooks
local function onCharacterAdded(player)
	if teamLabelsEnabled then createTeamLabel(player) end
end

local function onPlayerAdded(player)
	if player ~= LocalPlayer then
		player.CharacterAdded:Connect(function()
			onCharacterAdded(player)
		end)
		player:GetPropertyChangedSignal("Team"):Connect(function()
			if teamLabelsEnabled then
				updateAllTeamLabels()
			end
			applyAllHeadMods()
		end)
	end
end

for _, player in ipairs(Players:GetPlayers()) do
	onPlayerAdded(player)
end

Players.PlayerAdded:Connect(onPlayerAdded)

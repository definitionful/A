-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Teams = game:GetService("Teams")
local LocalPlayer = Players.LocalPlayer

-- Settings
local DEFAULT_HEAD_SIZE_R15 = Vector3.new(1.198, 1.202, 1.198)
local DEFAULT_HEAD_SIZE_R6 = Vector3.new(2, 1, 1)
local DEFAULT_KEY = Enum.KeyCode.LeftAlt
local keybind = DEFAULT_KEY
local ignoredTeams = {}
local ignoreOwnTeam = false
local fullBrightEnabled = false

-- Variables
local function getDefaultHeadSize()
	local char = LocalPlayer.Character
	if char and char:FindFirstChild("Humanoid") then
		return char.Humanoid.RigType == Enum.HumanoidRigType.R15 and DEFAULT_HEAD_SIZE_R15 or DEFAULT_HEAD_SIZE_R6
	end
	return DEFAULT_HEAD_SIZE_R15
end

local defaultHeadSize = getDefaultHeadSize()
local headModEnabled = false
local highlightEnabled = false
local menuVisible = false

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "ClientESP_UI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local openButton = Instance.new("TextButton")
openButton.Size = UDim2.new(0, 100, 0, 40)
openButton.Position = UDim2.new(0, 10, 0, 10)
openButton.Text = "Open Menu"
openButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
openButton.TextColor3 = Color3.new(1, 1, 1)
openButton.Active = true
openButton.Draggable = true
openButton.Parent = gui

local menu = Instance.new("Frame")
menu.Size = UDim2.new(0, 250, 0, 450)
menu.Position = UDim2.new(0, 10, 0, 60)
menu.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
menu.Visible = false
menu.Active = true
menu.Draggable = true
menu.Parent = gui

-- Clamp GUI
RunService.RenderStepped:Connect(function()
	for _, frame in ipairs({menu, openButton}) do
		if frame.Visible then
			local pos = frame.AbsolutePosition
			local size = frame.AbsoluteSize
			local guiSize = gui.AbsoluteSize
			frame.Position = UDim2.new(0, math.clamp(pos.X, 0, guiSize.X - size.X), 0, math.clamp(pos.Y, 0, guiSize.Y - size.Y))
		end
	end
end)

-- Toggle
UserInputService.InputBegan:Connect(function(input, gpe)
	if not gpe and input.KeyCode == keybind then
		menu.Visible = not menu.Visible
	end
end)
openButton.MouseButton1Click:Connect(function()
	menu.Visible = not menu.Visible
end)

-- Helpers
local function createLabel(parent, text, pos)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(0, 200, 0, 20)
	label.Position = pos
	label.Text = text
	label.TextColor3 = Color3.new(1, 1, 1)
	label.BackgroundTransparency = 1
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = parent
end

local function createCheckbox(parent, pos, default)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 20, 0, 20)
	btn.Position = pos
	btn.BackgroundColor3 = default and Color3.new(0, 1, 0) or Color3.fromRGB(80, 80, 80)
	btn.Text = ""
	btn.BorderColor3 = Color3.new(0, 0, 0)
	btn.Parent = parent
	return btn
end

local function createSlider(parent, pos, min, max, default)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 200, 0, 20)
	frame.Position = pos
	frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	frame.BorderSizePixel = 0
	frame.Parent = parent

	local fill = Instance.new("Frame")
	fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
	fill.BackgroundColor3 = Color3.fromRGB(120, 120, 255)
	fill.BorderSizePixel = 0
	fill.Parent = frame

	local dragging = false
	local value = default

	local function updateValue(x)
		local relX = math.clamp((x - frame.AbsolutePosition.X) / frame.AbsoluteSize.X, 0, 1)
		fill.Size = UDim2.new(relX, 0, 1, 0)
		value = min + relX * (max - min)
	end

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			updateValue(input.Position.X)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateValue(input.Position.X)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)

	return function()
		return value
	end
end

-- UI elements
createLabel(menu, "Head Mod:", UDim2.new(0, 10, 0, 10))
local headCheckbox = createCheckbox(menu, UDim2.new(0, 90, 0, 10), false)

createLabel(menu, "Highlight:", UDim2.new(0, 10, 0, 40))
local highlightCheckbox = createCheckbox(menu, UDim2.new(0, 90, 0, 40), false)

createLabel(menu, "Full Bright:", UDim2.new(0, 10, 0, 70))
local fullBrightCheckbox = createCheckbox(menu, UDim2.new(0, 90, 0, 70), false)

createLabel(menu, "Ignore Own Team:", UDim2.new(0, 10, 0, 100))
local ownTeamCheckbox = createCheckbox(menu, UDim2.new(0, 150, 0, 100), false)

createLabel(menu, "Head Size:", UDim2.new(0, 10, 0, 130))
local getHeadSize = createSlider(menu, UDim2.new(0, 10, 0, 150), 1, 30, defaultHeadSize.X)

createLabel(menu, "Head Transparency:", UDim2.new(0, 10, 0, 180))
local getTransparency = createSlider(menu, UDim2.new(0, 10, 0, 200), 0, 1, 0)

createLabel(menu, "Toggle Keybind:", UDim2.new(0, 10, 0, 230))
local keyLabel = Instance.new("TextLabel")
keyLabel.Size = UDim2.new(0, 100, 0, 20)
keyLabel.Position = UDim2.new(0, 120, 0, 230)
keyLabel.Text = keybind.Name
keyLabel.TextColor3 = Color3.new(1, 1, 1)
keyLabel.BackgroundTransparency = 1
keyLabel.Parent = menu

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0, 200, 0, 25)
keyBox.Position = UDim2.new(0, 10, 0, 260)
keyBox.PlaceholderText = "Press any key..."
keyBox.Text = ""
keyBox.ClearTextOnFocus = false
keyBox.TextColor3 = Color3.new(1, 1, 1)
keyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyBox.Parent = menu

keyBox.Focused:Connect(function()
	local conn
	conn = UserInputService.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Keyboard then
			keybind = input.KeyCode
			keyLabel.Text = keybind.Name
			keyBox.Text = ""
			keyBox:ReleaseFocus()
			conn:Disconnect()
		end
	end)
end)

local resetButton = Instance.new("TextButton")
resetButton.Size = UDim2.new(0, 200, 0, 30)
resetButton.Position = UDim2.new(0, 10, 0, 290)
resetButton.Text = "Reset to Default"
resetButton.BackgroundColor3 = Color3.fromRGB(100, 30, 30)
resetButton.TextColor3 = Color3.new(1, 1, 1)
resetButton.Parent = menu

resetButton.MouseButton1Click:Connect(function()
	headModEnabled = false
	highlightEnabled = false
	fullBrightEnabled = false
	ignoreOwnTeam = false
	ignoredTeams = {}
	headCheckbox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	highlightCheckbox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	fullBrightCheckbox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	ownTeamCheckbox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
end)

-- Checkbox logic
headCheckbox.MouseButton1Click:Connect(function()
	headModEnabled = not headModEnabled
	headCheckbox.BackgroundColor3 = headModEnabled and Color3.new(0, 1, 0) or Color3.fromRGB(80, 80, 80)
end)

highlightCheckbox.MouseButton1Click:Connect(function()
	highlightEnabled = not highlightEnabled
	highlightCheckbox.BackgroundColor3 = highlightEnabled and Color3.new(0, 1, 0) or Color3.fromRGB(80, 80, 80)
end)

fullBrightCheckbox.MouseButton1Click:Connect(function()
	fullBrightEnabled = not fullBrightEnabled
	fullBrightCheckbox.BackgroundColor3 = fullBrightEnabled and Color3.new(0, 1, 0) or Color3.fromRGB(80, 80, 80)
	if fullBrightEnabled then
		Lighting.Brightness = 3
		Lighting.ClockTime = 14
		Lighting.FogEnd = 100000
	else
		Lighting.Brightness = 1
		Lighting.ClockTime = 14
		Lighting.FogEnd = 1000
	end
end)

ownTeamCheckbox.MouseButton1Click:Connect(function()
	ignoreOwnTeam = not ignoreOwnTeam
	ownTeamCheckbox.BackgroundColor3 = ignoreOwnTeam and Color3.new(0, 1, 0) or Color3.fromRGB(80, 80, 80)
end)

-- Head Mod / Highlight
local function applyHeadMod(player)
	if player == LocalPlayer then return end
	if ignoredTeams[player.Team and player.Team.Name or ""] then return end
	if ignoreOwnTeam and player.Team == LocalPlayer.Team then return end

	local char = player.Character
	if not char then return end
	local head = char:FindFirstChild("Head")
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if head and humanoid then
		local baseSize = humanoid.RigType == Enum.HumanoidRigType.R15 and DEFAULT_HEAD_SIZE_R15 or DEFAULT_HEAD_SIZE_R6
		head.Size = baseSize * getHeadSize()
		head.Transparency = getTransparency()
		head.CanCollide = false
		head.Massless = true
	end
end

local function applyHighlight(player)
	if player == LocalPlayer then return end
	local char = player.Character
	if not char then return end
	local hl = char:FindFirstChild("ClientESP")
	if not hl then
		hl = Instance.new("Highlight")
		hl.Name = "ClientESP"
		hl.Adornee = char
		hl.FillTransparency = 1
		hl.OutlineTransparency = 0
		hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		hl.Parent = char
	end
	hl.OutlineColor = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)
end

local function hookPlayer(player)
	player.CharacterAdded:Connect(function()
		task.wait(1)
		if highlightEnabled then applyHighlight(player) end
	end)
	player:GetPropertyChangedSignal("Team"):Connect(function()
		if highlightEnabled then applyHighlight(player) end
	end)
end

for _, p in pairs(Players:GetPlayers()) do
	if p ~= LocalPlayer then hookPlayer(p) end
end
Players.PlayerAdded:Connect(hookPlayer)

RunService.Heartbeat:Connect(function()
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= LocalPlayer then
			if headModEnabled then pcall(function() applyHeadMod(p) end) end
			if highlightEnabled then pcall(function() applyHighlight(p) end) end
		end
	end
end)
